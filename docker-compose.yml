version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: monolab_postgres
    restart: always
    environment:
      POSTGRES_DB: monolab_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Next.js application (for development)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: monolab_app
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/monolab_dev
      - DIRECT_URL=postgresql://postgres:password@postgres:5432/monolab_dev
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev

  # Prisma Studio (optional, for database management)
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: monolab_prisma_studio
    ports:
      - "5555:5555"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/monolab_dev
    depends_on:
      postgres:
        condition: service_healthy
    command: npx prisma studio --hostname 0.0.0.0
    profiles:
      - studio

volumes:
  postgres_data: